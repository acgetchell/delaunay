[package]
name = "delaunay"
version = "0.4.4"
edition = "2024"
rust-version = "1.89.0"
authors = ["Adam Getchell <adam@adamgetchell.org>"]
homepage = "https://github.com/acgetchell/delaunay"
documentation = "https://docs.rs/delaunay"
repository = "https://github.com/acgetchell/delaunay"
description = "A d-dimensional Delaunay triangulation library with float coordinate support"
license = "BSD-3-Clause"
keywords = ["delaunay", "triangulation", "comp-geometry", "mesh"]
categories = ["algorithms", "mathematics", "science"]
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
allocation-counter = { version = "0.8.1", optional = true }  # for memory profiling
anyhow = "1.0.100"
arc-swap = "1.7.1"
approx = "0.5.1"
clap = { version = "4.5.48", features = ["derive"] }
derive_builder = "0.20.1"
fxhash = "0.2.1"  # Fast non-cryptographic hashing for performance
smallvec = { version = "1.13.2", features = ["serde"] }  # Stack allocation for small collections
nalgebra = "0.34.1"
num-traits = "0.2.19"
ordered-float = { version = "5.0.0", features = ["serde"] }
peroxide = "0.40.0"
rand = "0.9.2"
serde = { version = "1.0.226", features = ["derive"] }
serde_json = "1.0.145"
serde_test = "1.0.177"
slotmap = { version = "1.0.7", features = ["serde"] }
thiserror = "2.0.16"
uuid = { version = "1.18.1", features = ["v4", "serde"] }

[dev-dependencies]
criterion = { version = "0.7", features = ["html_reports"] }
pastey = "0.1"

[features]
count-allocations = ["allocation-counter"]
bench = []  # Enable benchmark-style tests and performance analysis

[[bench]]
name = "circumsphere_containment"
harness = false

[[bench]]
name = "triangulation_creation"
harness = false

[[bench]]
name = "microbenchmarks"
harness = false

[[bench]]
name = "assign_neighbors_performance"
harness = false

[[bench]]
name = "memory_scaling"
harness = false

[[bench]]
name = "triangulation_vs_hull_memory"
harness = false

[[bench]]
name = "ci_performance_suite"
harness = false

[[bench]]
name = "profiling_suite"
harness = false

[lints.rust]
unsafe_code = "forbid"
dead_code = "warn"
missing_docs = "warn"


[lints.clippy]
extra_unused_type_parameters = "warn"
pedantic = { level = "warn", priority = -1 }
# Allow multiple crate versions due to transitive dependencies
multiple_crate_versions = "allow"
